generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(auto()) @map("_id") @db.ObjectId
  email             String     @unique
  name              String     @default(" ")
  password          String?
  bio               String     @default("...")
  image             String     @default("")
  phone             String     @default("")
  sentMessages      Messages[] @relation("SentMessages")
  receivedMessages  Messages[] @relation("ReceivedMessages")
  sentRequests      Friend[]   @relation("userFriends")
  receivedRequests  Friend[]   @relation("friendOf")
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @default(now())
   isOnline          Boolean    @default(false) 
}

model Messages {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String   @db.ObjectId
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String   @db.ObjectId
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  message    String
  createdAt  DateTime  @default(now())
  seen       Boolean   @default(false)
}

model Friend {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  userId     String        @db.ObjectId   
  user       User          @relation("userFriends", fields: [userId], references: [id])

  friendId   String        @db.ObjectId   
  friend     User          @relation("friendOf", fields: [friendId], references: [id])

  request    RequestStatus
  createdAt  DateTime      @default(now())
}

enum RequestStatus {
  Pending
  Accepted
  Rejected
  Blocked
}


model Room{
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  roomId     String        @unique
  createdBy  String        @db.ObjectId
  createdAt  DateTime      @default(now())
}